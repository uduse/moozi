Milestones:
  ✘ vanilla policy gradient using two inferences @cancelled(21-06-06 15:57)
  ☐ policy gradient method with advantage
  ☐ exhaustive search with depth of 1

Network:
  ☐ target network and behavior network https://github.com/deepmind/acme/blob/926b17ad116578801a0fbbe73c4ddc276a28e23e/acme/agents/jax/dqn/learning_lib.py#L107

Replay Buffer:
  ☐ episodic replay buffer for full-gradient
  ☐ n-step replay buffer for semi-gradient

MCTS:
  Python:
    ☐ finish drafting python MCTS
    ☐ add python MCTS test
    ☐ add support to `known_bound` @low
  C++:
    ☐ set up a basic C++ PyBind santity check program

Utils:
  ☐ coverage report
  ☐ profiling https://jax.readthedocs.io/en/latest/profiling.html
  ☐ hyper-parameters tuning https://my.guild.ai/t/hyperparameter-optimization/161

MISCs:
  ☐ decode guild.yaml flag types, e.g., loguniform to integer